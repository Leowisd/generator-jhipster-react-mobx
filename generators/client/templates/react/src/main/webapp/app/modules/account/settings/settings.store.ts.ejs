<%#
 Copyright 2020 Erki Ehtla

 Licensed under the Apache License, Version 2.0 the "License";
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>

import { action, observable } from 'mobx';
import axios, { AxiosResponse } from 'axios';
import BaseStore from 'app/shared/util/base-store';

const apiUrl = '/api/account';

export class SettingsStore extends BaseStore {
  @observable public loading = false;
  @observable public errorMessage = null;
  @observable public updateSuccess = false;
  @observable public updateFailure = false;
  <%_ if (!enableTranslation) { _%>
  private successMsg = translate('settings.messages.success');
  <%_ } _%>
  @action
  saveAccountSettings = this.updateHandler(this.saveAccountSettingsGen, <% if (enableTranslation) { %>'settings.messages.success'<% } else { %>this.successMsg<% } %>);

  @action.bound
  reset() {
    super.resetBase();
    this.loading = false;
    this.errorMessage = null;
    this.updateSuccess = false;
    this.updateFailure = false;
  }

  // Actions
  *saveAccountSettingsGen(account) {
    const result: AxiosResponse = yield axios.post(apiUrl, account);
    yield this.rootStore.authStore.getSession();
    return result;
  }
}

export default SettingsStore;
